@page "/definition-form"

@using VxFormGenerator.Core
@using VxFormGenerator.Core.Layout
@using VxFormGeneratorDemoData


<h1>Model Based Form Demo</h1>

<div class="card">
    <div class="card-header">
        Change form options
    </div>
    <div class="card-body">

        <EditForm Model="_options"
                  OnSubmit="ChangeLayoutOptions">
            <VxFormGenerator.Core.Validation.ObjectGraphDataAnnotationsValidator />
            <RenderFormElements></RenderFormElements>
            <button class="btn btn-primary" type="submit">Submit</button>
        </EditForm>

    </div>
</div>
<br />

<div class="card">
    <div class="card-header">
        Generated by POCO
    </div>
    <div class="card-body">

        <EditForm Model="_model"
                  OnValidSubmit="HandleValidSubmit"
                  OnInvalidSubmit="HandleInValidSubmit">
            <VxFormGenerator.Core.Validation.ObjectGraphDataAnnotationsValidator />
            <RenderFormElements FormLayoutOptions="@_optionsForForm"></RenderFormElements>
            <button class="btn btn-primary" type="submit">Submit</button>
        </EditForm>
    </div>
</div>

<br />

@code{

    /// <summary>
    /// Model that is used for the form
    /// </summary>
    private object _model = new FeedingSession();
    private readonly VxFormLayoutOptionsAnnotated _options = new();
    private VxFormLayoutOptions _optionsForForm = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        ChangeLayoutOptions(new EditContext(_options));
    }

    /// <summary>
    /// Will handle the submit action of the form
    /// </summary>
    /// <param name="context">The model with values as entered in the form</param>
    private void HandleValidSubmit(EditContext context)
    {
        // save your changes
    }

    private void HandleInValidSubmit(EditContext context)
    {


    }

    private void ChangeLayoutOptions(EditContext context)
    {
        var options = ((VxFormLayoutOptionsAnnotated)context.Model);
        _optionsForForm = options.ToFormLayoutOptions();

        switch (options.FormRenderKind)
        {
            case TypeOfForm.SIMPLE:
                _model = new FeedingSession();
                break;
            case TypeOfForm.ADVANCED:
                _model = new AddressViewModel();
                break;
            case TypeOfForm.COMPLEX:
                _model = new OrderViewModel();
                break;
        }

    }

}
